function [] = RLSv2(L,lambda, delta,Z, name)
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here


M = 10e3;
PSignal = movvar(Z, M); 

wRls = zeros(L,1);
P = (1/delta)*eye(L);
estEr = zeros(length(Z),1);

for n = L:(length(Z)-1)
    
    U = Z(n: -1:n-L+1);
    dhat = wRls'*U;
    
    estEr(n+1) = Z(n + 1) - dhat;
    

     k = ((1/lambda).*P*U)./(1+(1/lambda).*U'*P*U);
     wRls =wRls + k.*estEr(n+1);
     P = (1/lambda).*P-(1/lambda).*k*U'*P;
    
end
NR = 10*log10(sum(Z.^2)./sum(estEr.^2)); 

PError =movvar(estEr, M); 





    dbpsig = 10*log10(PSignal);
    dbper= 10*log10(PError);
    figure
    plot(dbpsig)
    hold on
    plot(dbper)
    str = sprintf("%s RLS: L= %d, lambda = %g, delta =%g,\n noise reduction = %gdB ",name, L,lambda,delta,NR);
    title(str)
    xlabel("sample number")
    ylabel("instantaneous power [dB]")
    legend("original noise power", "predection error power")
    hold off
    
end
